{
    "ESP-IDF": {
        "nome": "ESP-IDF",
        "icone": "‚öôÔ∏è",
        "nome_completo": "Espressif IoT Development Framework",
        "descricao": "Framework oficial de desenvolvimento da Espressif para ESP32, baseado em FreeRTOS",
        "linguagem": "C/C++",
        "tipo": "Framework Base",
        "funcao_principal": "Desenvolvimento de aplica√ß√µes IoT de prop√≥sito geral com acesso completo ao hardware",
        "caracteristicas": [
            "Sistema operacional em tempo real (FreeRTOS)",
            "Pilha completa de Wi-Fi e Bluetooth",
            "Suporte a todos os perif√©ricos do ESP32",
            "Ferramentas de build e debug integradas",
            "Gerenciamento de energia avan√ßado",
            "Suporte OTA (Over-The-Air updates)",
            "Biblioteca de componentes extens√≠vel"
        ],
        "casos_uso": [
            "Dispositivos IoT conectados",
            "Automa√ß√£o residencial e industrial",
            "Wearables e dispositivos vest√≠veis",
            "Gateways e hubs de comunica√ß√£o",
            "Sistemas embarcados em tempo real"
        ],
        "exemplo": "/exemplos/esp-idf.c",
        "exemplos": "https://github.com/espressif/esp-idf/tree/master/examples",
        "documentacao": "https://docs.espressif.com/projects/esp-idf/",
        "repositorio": "https://github.com/espressif/esp-idf",
        "cor": "#E74C3C"
    },
    "ESP-ADF": {
        "nome": "ESP-ADF",
        "icone": "üéµ",
        "nome_completo": "ESP Audio Development Framework",
        "descricao": "Framework especializado para aplica√ß√µes de √°udio no ESP32",
        "linguagem": "C/C++",
        "tipo": "Framework Especializado",
        "funcao_principal": "Desenvolvimento de aplica√ß√µes de √°udio com suporte a codecs, streaming e processamento",
        "caracteristicas": [
            "Suporte a m√∫ltiplos codecs de √°udio (MP3, AAC, FLAC, WAV, etc.)",
            "Pipeline de √°udio configur√°vel",
            "Streaming de √°udio via HTTP, HTTPS, HLS",
            "Integra√ß√£o com servi√ßos de nuvem (AWS, Google, Baidu)",
            "Reconhecimento de voz e wake word",
            "Equaliza√ß√£o e efeitos de √°udio",
            "Suporte a Bluetooth A2DP e HFP"
        ],
        "casos_uso": [
            "Alto-falantes inteligentes",
            "Assistentes de voz",
            "R√°dios de internet",
            "Players de m√∫sica",
            "Interfones e intercomunicadores",
            "Sistemas de PA (Public Address)"
        ],
        "exemplo": "/exemplos/esp-adf.c",
        "exemplos": "https://github.com/espressif/esp-adf/tree/master/examples",
        "documentacao": "https://docs.espressif.com/projects/esp-adf/",
        "repositorio": "https://github.com/espressif/esp-adf",
        "cor": "#3498DB"
    },
    "ESP-DSP": {
        "nome": "ESP-DSP",
        "icone": "üìä",
        "nome_completo": "ESP Digital Signal Processing Library",
        "descricao": "Biblioteca otimizada para processamento digital de sinais no ESP32",
        "linguagem": "C/C++",
        "tipo": "Biblioteca Especializada",
        "funcao_principal": "Processamento de sinais digitais com algoritmos otimizados para arquitetura ESP32",
        "caracteristicas": [
            "Opera√ß√µes matem√°ticas otimizadas (FFT, convolu√ß√£o, correla√ß√£o)",
            "Filtros digitais (FIR, IIR, Kalman)",
            "Transformadas (FFT, DCT, DWT)",
            "Opera√ß√µes de matriz e vetores",
            "Suporte a ponto fixo e ponto flutuante",
            "Otimiza√ß√µes espec√≠ficas para Xtensa e RISC-V"
        ],
        "casos_uso": [
            "An√°lise de sinais de √°udio",
            "Processamento de sinais de sensores",
            "Filtros adaptativos",
            "An√°lise espectral",
            "Compress√£o de dados",
            "Reconhecimento de padr√µes"
        ],
        "exemplo": "/exemplos/esp-dsp.c",
        "exemplos": "https://github.com/espressif/esp-dsp/tree/master/examples",
        "documentacao": "https://docs.espressif.com/projects/esp-dsp/",
        "repositorio": "https://github.com/espressif/esp-dsp",
        "cor": "#9B59B6"
    },
    "ESP-WHO": {
        "nome": "ESP-WHO",
        "icone": "üì∑",
        "nome_completo": "ESP Image Processing Framework",
        "descricao": "Framework para processamento de imagens e vis√£o computacional no ESP32",
        "linguagem": "C/C++",
        "tipo": "Framework Especializado",
        "funcao_principal": "Detec√ß√£o facial, reconhecimento facial e processamento de imagens",
        "caracteristicas": [
            "Detec√ß√£o de faces em tempo real",
            "Reconhecimento facial",
            "Detec√ß√£o de pontos faciais (landmarks)",
            "Rastreamento de objetos",
            "Otimizado para ESP32-S3 com aceleradores de IA",
            "Suporte a c√¢meras via interface DVP",
            "Modelos de rede neural otimizados"
        ],
        "casos_uso": [
            "Sistemas de reconhecimento facial",
            "Controle de acesso inteligente",
            "C√¢meras de seguran√ßa com IA",
            "Detec√ß√£o de presen√ßa",
            "An√°lise de express√µes faciais",
            "Contagem de pessoas"
        ],
        "exemplo": "/exemplos/esp-who.c",
        "exemplos": "https://github.com/espressif/esp-who/tree/master/examples",
        "documentacao": "https://github.com/espressif/esp-who",
        "repositorio": "https://github.com/espressif/esp-who",
        "cor": "#E67E22"
    },
    "ESP-NN": {
        "nome": "ESP-NN",
        "icone": "üß†",
        "nome_completo": "ESP Neural Network Library",
        "descricao": "Biblioteca de redes neurais otimizada para ESP32",
        "linguagem": "C/C++",
        "tipo": "Biblioteca Especializada",
        "funcao_principal": "Infer√™ncia de redes neurais com otimiza√ß√µes espec√≠ficas para ESP32",
        "caracteristicas": [
            "Opera√ß√µes de rede neural otimizadas",
            "Suporte a convolu√ß√£o, pooling, fully connected",
            "Quantiza√ß√£o de 8 e 16 bits",
            "Otimiza√ß√µes SIMD para Xtensa e RISC-V",
            "Compat√≠vel com TensorFlow Lite",
            "Baixo consumo de mem√≥ria",
            "Acelera√ß√£o via instru√ß√µes vetoriais"
        ],
        "casos_uso": [
            "Classifica√ß√£o de imagens",
            "Detec√ß√£o de objetos",
            "Reconhecimento de voz",
            "Predi√ß√£o de s√©ries temporais",
            "Detec√ß√£o de anomalias",
            "IA na borda (Edge AI)"
        ],
        "exemplo": "/exemplos/esp-nn.c",
        "exemplos": "https://github.com/espressif/esp-nn/tree/master/test_app",
        "documentacao": "https://github.com/espressif/esp-nn",
        "repositorio": "https://github.com/espressif/esp-nn",
        "cor": "#1ABC9C"
    },
    "ESP-Matter": {
        "nome": "ESP-Matter",
        "icone": "üè†",
        "nome_completo": "ESP Matter SDK",
        "descricao": "SDK para desenvolvimento de dispositivos compat√≠veis com o padr√£o Matter",
        "linguagem": "C/C++",
        "tipo": "Framework Especializado",
        "funcao_principal": "Criar dispositivos smart home interoper√°veis usando o padr√£o Matter",
        "caracteristicas": [
            "Compatibilidade com padr√£o Matter (ex-Project CHIP)",
            "Interoperabilidade entre ecossistemas (Apple, Google, Amazon)",
            "Suporte a Thread e Wi-Fi",
            "Comissionamento simplificado",
            "Seguran√ßa robusta (PKI, criptografia)",
            "Modelos de dispositivos pr√©-definidos",
            "Integra√ß√£o com ESP-IDF"
        ],
        "casos_uso": [
            "L√¢mpadas inteligentes",
            "Tomadas e interruptores smart",
            "Sensores de temperatura e umidade",
            "Fechaduras inteligentes",
            "Termostatos",
            "Dispositivos de controle de cortinas"
        ],
        "exemplo": "/exemplos/esp-matter.c",
        "exemplos": "https://github.com/espressif/esp-matter/tree/main/examples",
        "documentacao": "https://docs.espressif.com/projects/esp-matter/",
        "repositorio": "https://github.com/espressif/esp-matter",
        "cor": "#F39C12"
    },
    "Arduino": {
        "nome": "Arduino",
        "icone": "üõ†Ô∏è",
        "nome_completo": "Arduino Core for ESP32",
        "descricao": "Implementa√ß√£o do framework Arduino para ESP32, facilitando o desenvolvimento",
        "linguagem": "C++",
        "tipo": "Framework Alternativo",
        "funcao_principal": "Desenvolvimento r√°pido e simplificado usando a API familiar do Arduino",
        "caracteristicas": [
            "API simples e intuitiva",
            "Grande comunidade e bibliotecas",
            "IDE Arduino integrada",
            "Suporte a Wi-Fi e Bluetooth",
            "Compatibilidade com bibliotecas Arduino",
            "Ideal para prototipagem r√°pida",
            "Curva de aprendizado suave"
        ],
        "casos_uso": [
            "Prototipagem r√°pida",
            "Projetos educacionais",
            "Makers e hobistas",
            "IoT simples",
            "Sensores e atuadores b√°sicos",
            "Projetos DIY"
        ],
        "exemplo": "/exemplos/arduino.ino",
        "exemplos": "https://github.com/espressif/arduino-esp32/tree/master/docs/en/tutorials",
        "documentacao": "https://docs.espressif.com/projects/arduino-esp32/",
        "repositorio": "https://github.com/espressif/arduino-esp32",
        "cor": "#00979D"
    },
    "MicroPython": {
        "nome": "MicroPython",
        "icone": "üêç",
        "nome_completo": "MicroPython for ESP32",
        "descricao": "Implementa√ß√£o do Python 3 otimizada para microcontroladores ESP32",
        "linguagem": "Python",
        "tipo": "Framework Alternativo",
        "funcao_principal": "Desenvolvimento em Python para prototipagem r√°pida e scripting",
        "caracteristicas": [
            "Sintaxe Python 3",
            "REPL interativo",
            "Desenvolvimento iterativo",
            "Bibliotecas padr√£o Python",
            "Suporte a Wi-Fi e Bluetooth",
            "Sistema de arquivos integrado",
            "Ideal para educa√ß√£o e prototipagem"
        ],
        "casos_uso": [
            "Prototipagem r√°pida",
            "Educa√ß√£o e ensino",
            "Scripts de automa√ß√£o",
            "IoT experimental",
            "Projetos de ci√™ncia de dados embarcados",
            "Testes e valida√ß√£o"
        ],
        "exemplo": "/exemplos/micropython.py",
        "exemplos": "https://github.com/micropython/micropython/tree/master/examples",
        "documentacao": "https://docs.micropython.org/en/latest/esp32/",
        "repositorio": "https://github.com/micropython/micropython",
        "cor": "#2B2B2B"
    }
}

